apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "kotlin-spring"

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers' }
}

sourceSets {
    main.kotlin.srcDirs = main.java.srcDirs = ['src']
    test.kotlin.srcDirs = test.java.srcDirs = ['test']
    main.resources.srcDirs = ['resources']
    test.resources.srcDirs = ['testresources']
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:Greenwich.RELEASE"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "ch.qos.logback:logback-classic:$logback_version"
    compile "org.springframework.boot:spring-boot-dependencies:$spring_boot_version"
    compile "org.springframework.cloud:spring-cloud-starter-netflix-zuul"
    compile 'org.projectreactor:reactor-spring:1.0.1.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile "org.springframework.boot:spring-boot-starter-aop"
    compile "org.springframework.boot:spring-boot-starter-web"
}


task cleanBackend(type: Delete) {
    if ((customizedEnvironment["BUNDLE_WEBCLIENT"] ?: "true").toBoolean()) {
        delete fileTree('resources/static') {
            include '**/**'
        }
        delete 'resources/static/static'
    }
    delete "out"
    delete "build"
}

task productionBuild(type: Copy) {
    from "$rootDir/backend/build/libs/" into "$rootDir/production/"
    destinationDir file("$rootDir/production/")
    rename "backend.jar", "otaku-shelter.jar"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

clean.dependsOn(cleanBackend)

if ((customizedEnvironment["BUNDLE_WEBCLIENT"] ?: "true").toBoolean()) {
    tasks.compileKotlin.dependsOn(':webclient:buildWebclient')
}

if ((customizedEnvironment["SPRING_ACTIVE_PROFILE"]) == "development") {
    tasks.compileKotlin.dependsOn(':webclient:devWebclient')
}

tasks.build.finalizedBy(productionBuild)

tasks.compileKotlin.dependsOn(cleanBackend)




